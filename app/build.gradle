apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'walle'

android {
    compileSdkVersion 28
    signingConfigs {
        release {
            storeFile file('../demoset.jks')//签名文件路径
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"  //签名密码
            v2SigningEnabled true
        }
    }
    defaultConfig {
        applicationId "com.example.mechrevo.demosetapp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            //签名
            signingConfig signingConfigs.release
            //加载默认的混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //自定义apk名字
//            android.applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    outputFileName = "${defaultConfig.applicationId}-${variant.buildType.name}-${defaultConfig.versionName}-${}.apk".toLowerCase()
//                }
//            }
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

}


walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("D:/xys/APK_output/apk/walle")
    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}.apk'
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.meituan.android.walle:payload_writer:1.1.6'
    implementation 'com.just.agentweb:agentweb:2.0.1'
    /*友盟统计需要的最新版本组件化基础库和统计SDK*/
    compile 'com.umeng.sdk:common:1.5.3'
    compile 'com.umeng.sdk:analytics:7.5.3'
    //dagger2
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'
    //java注解
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    implementation 'com.github.markzhai:blockcanary-android:1.5.0'
    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
//    debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'
//    releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'


    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'

}
